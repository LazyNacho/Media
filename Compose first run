version: "3.8"

services:

  # Prowlarr service to index torrent links
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/configs/prowlarr:/config # Prowlarr configs
#    expose:
#      - 9696/tcp # web ui
#    ports:
#      - 9696:9696/tcp # web ui
    restart: unless-stopped
    network_mode: "service:gluetun"  # Use gluetun's network stack

  # image used to bupass cloudflare for prowlarr
  flaresolverr:
    image: flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=debug
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=America/Los_Angeles
      - BROWSER_HEADLESS=false
#    expose:
      - 8191/tcp # listening port for selenium
    restart: unless-stopped
    network_mode: "service:gluetun" # Use glueton's network stoack

  # Sonarr service to scan for TV shows
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/configs/sonarr:/config # Sonarr configs
      - /media/Lazy4Drive/tv:/media # TV shows media directory
      - /media/Lazy4Drive/torrents:/downloads # Map the downloads directory
#    expose:
#      - 8989/tcp # web ui
#    ports:
#      - 8989:8989/tcp # web ui
    restart: unless-stopped
    network_mode: "service:gluetun"  # Use gluetun's network stack

  # Radarr service to scan for movies
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/configs/radarr:/config
      - /media/Lazy4Drive/movies:/media # Movies media directory
      - /media/Lazy4Drive/torrents:/downloads # Map the downloads directory
#    expose:
#      - 7878/tcp # web ui
#    ports:
#      - 7878:7878/tcp # web ui
    restart: unless-stopped
    network_mode: "service:gluetun"  # Use gluetun's network stack

  # Readarr service to scan for books
  readarr:
    image: linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/configs/readarr:/config
      - /media/Lazy4Drive/books:/media # Books media directory 
      - /media/Lazy4Drive/torrents:/downloads # Map the downloads directory
#    expose:
#      - 8787/tcp # web ui
#    ports:
#      - 8787:8787/tcp # web ui
    restart: unless-stopped
    network_mode: "service:gluetun"  # Use gluetun's network stack

  # Calibre service for managing ebooks
  calibre:
    image: ghcr.io/linuxserver/calibre
    container_name: calibre
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/configs/calibre:/config
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/calibre/uploads:/uploads
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/calibre/plugins:/plugins
      - /media/Lazy4Drive/books:/Calibre_Library # Books library directory
    ports:
      - 8082:8080
      - 8081:8081
    restart: unless-stopped
    networks:
      - ebooks

  # Calibre-Web service providing a web interface to Calibre
  calibre-web:
    image: ghcr.io/linuxserver/calibre-web
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/configs/calibre-web:/config
      - /media/Lazy4Drive/books:/books # Books directory
    restart: unless-stopped
    depends_on:
      - calibre
    ports:
      - 8083:8083
    networks:
      - ebooks

  # Gluetun service for VPN with a kill switch
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    ports:
      - 8080:8080 # qbittorrent http web ui
      - 7878:7878 # Radarr web UI
      - 8989:8989 # Sonarr web UI
      - 9696:9696 # Prowlarr web UI
      - 8787:8787 # Readarr web UI
      - 5055:5055 # Overseerr
    environment:
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=openvpn
      - OPENVPN_USER=R8wLr54NQtROwyIf+pmp # ProtonVPN username + +pmp
      - OPENVPN_PASSWORD=ZBVkgfdIhQv9p110owtLPDgQPxPcAYGK # ProtonVPN password
      - SERVER_CITIES=San Jose # Specify city to target servers near California
      - VPN_PORT_FORWARDING=ON
      - FIREWALL_VPN_INPUT_PORTS=8080,7878,8989,9696,8787,5055,51933
#      - FIREWALL_OUTBOUND_SUBNETS=192.168.1.0/24
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/configs/gluetun:/gluetun
    restart: unless-stopped

  # qBittorrent service for downloading torrents
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - WEBUI_PORT=8080
#      - WEBUI_USERNAME=admin  # Set your desired username
#      - WEBUI_PASSWORD=adminadmin  # Set your desired password
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/configs/qbittorrent:/config
      - /media/Lazy4Drive/torrents:/downloads # Torrent downloads directory
    network_mode: service:gluetun  # Use the gluetun container network (VPN killswitch) formerly container:gluetun
    restart: unless-stopped

  # Plex service for media streaming
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - VERSION=docker
      - PLEX_CLAIM=claim-GX1K-ssxkvWznxQAnXsC #optional
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/configs/plex:/config
      - /media/Lazy4Drive/tv:/tv # TV series directory
      - /media/Lazy4Drive/movies:/movies # Movies directory
    restart: unless-stopped

  # Homarr service for dashboard management
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Optional, for Docker integration
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/configs/homarr:/app/data/configs
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/homarr/icons:/app/public/icons
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/homarr/data:/data
    ports:
      - 7575:7575 # Web UI port

  # Overseerr service for media request management
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=America/Los_Angeles
      - PORT=5055
#    ports:
#      - 5055:5055 # Web UI port
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/LazyTime/configs/overseerr:/app/config # Config path
    restart: unless-stopped
    network_mode: service:gluetun # Use the Gluetun network mode

networks:
  ebooks:
    external: true
